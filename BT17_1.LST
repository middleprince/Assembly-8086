Microsoft (R) Macro Assembler Version 5.00                  4/11/17 21:45:11
                                                             Page     1-1


				;using int16h to display the ceontent you intpu
				ted to the screen 
				assume cs:code 
				 
 0000				code segment 
 0000				    start: 
 0000  50			    getstr:     push ax 
				     
 0001  B4 00			    getstrs:    mov ah,0 
 0003  CD 16			                int 16h 
 0005  3C 20			                cmp al,20h      ;judage is a ch
				ar 
 0007  72 0C			                jb nochar  
 0009  B4 00			                mov ah,0 
 000B  E8 003B R		                call charstack 
 000E  B4 02			                mov ah,2 
 0010  E8 003B R		                call charstack 
 0013  EB EC			                jmp getstrs 
				                 
 0015  80 FC 0E			    nochar:     cmp ah,0eh          ;is backspa
				ce 
 0018  74 07			                je backspace 
 001A  80 FC 1C			                cmp ah,1ch 
 001D  74 0E			                je enter            ;is enter 
 001F  EB E0			                jmp getstrs 
				                 
 0021  B4 01			    backspace:  mov ah,1 
 0023  E8 003B R		                call charstack 
 0026  B4 02			                mov ah,2 
 0028  E8 003B R		                call charstack 
 002B  EB D4			                jmp getstrs 
				 
 002D  B0 00			    enter:      mov al,0 
 002F  B4 00			                mov ah,0 
 0031  E8 003B R		                call charstack 
 0034  B4 02			                mov ah,2 
 0036  E8 003B R		                call charstack 
 0039  58			                pop ax 
 003A  C3			                ret 
				 
 003B  EB 08			    charstack:  jmp short charstart 
				     
 003D  0059 R 0068 R 007F R	    table       dw  charpush,charpop,charshow 
 0043  0000			    top         dw  0 
				 
 0045  53			    charstart:  push bx 
 0046  52			                push dx 
 0047  56			                push si 
 0048  06			                push es 
				 
 0049  80 FC 02			                cmp ah,2 
 004C  77 65			                ja sret 
 004E  8A DC			                mov bl,ah 
 0050  B7 00			                mov bh,0 
Microsoft (R) Macro Assembler Version 5.00                  4/11/17 21:45:11
                                                             Page     1-2


 0052  03 DB			                add bx,bx 
 0054  2E: FF A7 003D R		                jmp word ptr table[bx] 
				                 
 0059  2E: 8B 1E 0043 R		    charpush:   mov bx,top 
 005E  88 00			                mov [si][bx],al 
 0060  2E: FF 06 0043 R		                inc top 
 0065  EB 4C 90			                jmp sret 
				 
 0068  2E: 83 3E 0043 R 00	    charpop:    cmp top,0 
 006E  74 43			                je sret 
 0070  2E: FF 0E 0043 R		                dec top 
 0075  2E: 8B 1E 0043 R		                mov bx,top 
 007A  8A 00			                mov al,[si][bx] 
 007C  EB 35 90			                jmp sret 
				 
 007F  BB B800			    charshow:   mov bx,0b800h 
 0082  8E C3			                mov es,bx 
 0084  B0 A0			                mov al,160 
 0086  B4 00			                mov ah,0 
 0088  F6 E6			                mul dh 
 008A  8B F8			                mov di,ax 
 008C  02 D2			                add dl,dl 
 008E  B6 00			                mov dh,0 
 0090  03 FA			                add di,dx 
				 
 0092  BB 0000			                mov bx,0 
				         
 0095  2E: 3B 1E 0043 R		    charshows:  cmp bx,top 
 009A  75 07			                jne noempty 
 009C  26: C6 05 20		                mov byte ptr es:[di],' ' 
 00A0  EB 11 90			                jmp sret 
 00A3  8A 00			    noempty:    mov al,[si][bx] 
 00A5  26: 88 05		                mov es:[di],al  
 00A8  26: C6 45 02 20		                mov byte ptr es:[di+2],' ' 
 00AD  43			                inc bx 
 00AE  83 C7 02			                add di,2 
 00B1  EB E2			                jmp charshows 
				 
 00B3  07			    sret:       pop es 
 00B4  5F			                pop di 
 00B5  5A			                pop dx 
 00B6  5B			                pop bx 
 00B7  C3			                ret 
				 
 00B8  B8 4C00			                mov ax,4c00h 
 00BB  CD 21			                int 21h 
				  
				                 
 00BD				code ends 
				end start 
Microsoft (R) Macro Assembler Version 5.00                  4/11/17 21:45:11
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00BD	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BACKSPACE  . . . . . . . . . . .  	L NEAR	0021	CODE

CHARPOP  . . . . . . . . . . . .  	L NEAR	0068	CODE
CHARPUSH . . . . . . . . . . . .  	L NEAR	0059	CODE
CHARSHOW . . . . . . . . . . . .  	L NEAR	007F	CODE
CHARSHOWS  . . . . . . . . . . .  	L NEAR	0095	CODE
CHARSTACK  . . . . . . . . . . .  	L NEAR	003B	CODE
CHARSTART  . . . . . . . . . . .  	L NEAR	0045	CODE

ENTER  . . . . . . . . . . . . .  	L NEAR	002D	CODE

GETSTR . . . . . . . . . . . . .  	L NEAR	0000	CODE
GETSTRS  . . . . . . . . . . . .  	L NEAR	0001	CODE

NOCHAR . . . . . . . . . . . . .  	L NEAR	0015	CODE
NOEMPTY  . . . . . . . . . . . .  	L NEAR	00A3	CODE

SRET . . . . . . . . . . . . . .  	L NEAR	00B3	CODE
START  . . . . . . . . . . . . .  	L NEAR	0000	CODE

TABLE  . . . . . . . . . . . . .  	L WORD	003D	CODE
TOP  . . . . . . . . . . . . . .  	L WORD	0043	CODE

@FILENAME  . . . . . . . . . . .  	TEXT  bt17_1		


    101 Source  Lines
    101 Total   Lines
     19 Symbols

  50934 + 465610 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
