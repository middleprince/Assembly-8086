Microsoft (R) Macro Assembler Version 5.00                  4/15/17 09:54:58
                                                             Page     1-1


				;using int16h to display the ceontent you intpu
				ted to the screen  
				assume cs:code 
				 
 0000				code segment 
 0000				    start: 
 0000  50			    getstr:     push ax 
				                 
 0001  B4 00			    getstrs:    mov ah,0 
 0003  CD 16			                int 16h 
 0005  3C 20			                cmp al,20h        ;judage is a 
				char 
 0007  72 10			                jb nochar  
 0009  B4 00			                mov ah,0 
 000B  E8 0053 R		                call charstack      ;push into 
				stack 
 000E  B4 02			                mov ah,2 
 0010  B6 04			                mov dh,4 
 0012  B2 01			                mov dl,1 
 0014  E8 0053 R		                call charstack        ;echo the
				 str 
 0017  EB E8			                jmp getstrs 
				                 
 0019  80 FC 0E			    nochar:     cmp ah,0eh          ;is backspa
				ce 
 001C  74 07			                je backspace 
 001E  80 FC 1C			                cmp ah,1ch 
 0021  74 12			                je enter            ;is enter 
 0023  EB DC			                jmp getstrs 
				                 
 0025  B4 01			    backspace:  mov ah,1 
 0027  E8 0053 R		                call charstack 
 002A  B4 02			                mov ah,2 
 002C  B6 04			                mov dh,4 
 002E  B2 01			                mov dl,1 
 0030  E8 0053 R		                call charstack 
 0033  EB CC			                jmp getstrs 
				 
 0035  B0 24			    enter:      mov al,'$' 
 0037  B4 00			                mov ah,0 
 0039  E8 0053 R		                call charstack 
 003C  B4 02			                mov ah,2 
 003E  B6 04			                mov dh,4 
 0040  B2 01			                mov dl,1 
 0042  E8 0053 R		                call charstack 
 0045  58			                pop ax 
				                 
 0046  B8 0058 R		                mov ax,offset datastack 
 0049  8B F0			                mov si,ax 
 004B  E8 0156 R		                call display 
				 
 004E  B8 4C00			                mov ax,4c00h 
 0051  CD 21			                int 21h 
				 
Microsoft (R) Macro Assembler Version 5.00                  4/15/17 09:54:58
                                                             Page     1-2


				            
				                 
 0053  E9 00D8 R		    charstack:  jmp  charstart 
				     
 0056  0058 R			    top dw offset datastack 
				 
 0058  0080[			    datastack: db 128 dup(0) 
	   00			
			 ]	
				
				 
 00D8  53			    charstart:  push bx 
 00D9  52			                push dx 
 00DA  56			                push si 
 00DB  06			                push es 
				 
				                 
				                 
 00DC  50			                push ax 
 00DD  8C C8			                mov ax,cs 
 00DF  8E D8			                mov ds,ax 
 00E1  58			                pop ax 
				 
 00E2  80 FC 02			                cmp ah,2 
 00E5  77 6A			                ja sret 
				                 
 00E7  80 FC 00			                cmp ah,0 
 00EA  74 0A			                je charpush 
 00EC  80 FC 01			                cmp ah,1 
 00EF  74 14			                je charpop 
 00F1  80 FC 02			                cmp ah,2 
 00F4  74 27			                je charshow 
				 
				 
 00F6  2E: 8B 1E 0056 R		    charpush:   mov bx,top 
 00FB  88 07			                mov ds:[bx],al 
 00FD  2E: FF 06 0056 R		                inc top 
 0102  EB 4D 90			                jmp sret 
				 
 0105  2E: 81 3E 0056 R 0058	    charpop:    cmp top,offset datastack 
	R			
 010C  74 43			                je sret 
 010E  2E: FF 0E 0056 R		                dec top 
 0113  2E: 8B 1E 0056 R		                mov bx,top 
 0118  8A 07			                mov al,[bx] 
 011A  EB 35 90			                jmp sret 
				 
				                
				 
 011D  BB B800			    charshow:   mov bx,0b800h 
 0120  8E C3			                mov es,bx 
 0122  B0 A0			                mov al,160 
 0124  B4 00			                mov ah,0 
 0126  F6 E6			                mul dh 
Microsoft (R) Macro Assembler Version 5.00                  4/15/17 09:54:58
                                                             Page     1-3


 0128  8B F8			                mov di,ax 
 012A  02 D2			                add dl,dl 
 012C  B6 00			                mov dh,0 
 012E  03 FA			                add di,dx 
				 
 0130  BB 0058 R		                mov bx,offset datastack 
				         
 0133  2E: 3B 1E 0056 R		    charshows:  cmp bx,top 
 0138  75 07			                jne noempty 
 013A  26: C6 05 20		                mov byte ptr es:[di],' ' 
 013E  EB 11 90			                jmp sret 
 0141  8A 07			    noempty:    mov al,ds:[bx] 
 0143  26: 88 05		                mov es:[di],al  
 0146  26: C6 45 02 20		                mov byte ptr es:[di+2],' ' 
 014B  43			                inc bx 
 014C  83 C7 02			                add di,2 
 014F  EB E2			                jmp charshows 
				 
 0151  07			    sret:       pop es 
 0152  5F			                pop di 
 0153  5A			                pop dx 
 0154  5B			                pop bx 
 0155  C3			                ret 
				  
				 
				 
 0156				 display:  
 0156  1E			            push ds  
 0157  57			            push di 
 0158  06			            push es 
				 
 0159  8C C8			            mov ax,cs 
 015B  8E D8			            mov ds,ax 
				             
 015D  B8 B800			            mov ax,0b800h 
 0160  8E C0			            mov es,ax 
 0162  BF 02D0			            mov di,160*4+40*2 
 0165  B4 01			            mov ah,1 
				 
 0167  8A 04			circlep:     mov al,ds:[si] 
 0169  3C 24			            cmp al,'$' 
 016B  74 07			            je outprint 
 016D  26: 89 05		            mov es:[di],ax 
 0170  47			            inc di 
 0171  47			            inc di 
 0172  EB F3			            jmp circlep 
				 
 0174  07			outprint:   pop es 
 0175  5F			            pop di 
 0176  1F			            pop ds 
 0177  C3			            ret 
				                 
 0178				code ends 
				end start 
Microsoft (R) Macro Assembler Version 5.00                  4/15/17 09:54:58
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	0178	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BACKSPACE  . . . . . . . . . . .  	L NEAR	0025	CODE

CHARPOP  . . . . . . . . . . . .  	L NEAR	0105	CODE
CHARPUSH . . . . . . . . . . . .  	L NEAR	00F6	CODE
CHARSHOW . . . . . . . . . . . .  	L NEAR	011D	CODE
CHARSHOWS  . . . . . . . . . . .  	L NEAR	0133	CODE
CHARSTACK  . . . . . . . . . . .  	L NEAR	0053	CODE
CHARSTART  . . . . . . . . . . .  	L NEAR	00D8	CODE
CIRCLEP  . . . . . . . . . . . .  	L NEAR	0167	CODE

DATASTACK  . . . . . . . . . . .  	L NEAR	0058	CODE
DISPLAY  . . . . . . . . . . . .  	L NEAR	0156	CODE

ENTER  . . . . . . . . . . . . .  	L NEAR	0035	CODE

GETSTR . . . . . . . . . . . . .  	L NEAR	0000	CODE
GETSTRS  . . . . . . . . . . . .  	L NEAR	0001	CODE

NOCHAR . . . . . . . . . . . . .  	L NEAR	0019	CODE
NOEMPTY  . . . . . . . . . . . .  	L NEAR	0141	CODE

OUTPRINT . . . . . . . . . . . .  	L NEAR	0174	CODE

SRET . . . . . . . . . . . . . .  	L NEAR	0151	CODE
START  . . . . . . . . . . . . .  	L NEAR	0000	CODE

TOP  . . . . . . . . . . . . . .  	L WORD	0056	CODE

@FILENAME  . . . . . . . . . . .  	TEXT  echot		


    153 Source  Lines
    153 Total   Lines
     22 Symbols

  50948 + 465596 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
