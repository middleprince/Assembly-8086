Microsoft (R) Macro Assembler Version 5.00                  4/13/17 20:36:57
                                                             Page     1-1


				;using int16h to display the ceontent you intpu
				ted to the screen 
				assume cs:code 
				 
 0000				code segment 
 0000				    start: 
 0000  50			    getstr:     push ax 
				     
 0001  B4 00			    getstrs:    mov ah,0 
 0003  CD 16			                int 16h 
 0005  3C 20			                cmp al,20h        ;judage is a 
				char 
 0007  72 0C			                jb nochar  
 0009  B4 00			                mov ah,0 
 000B  E8 003F R		                call charstack 
 000E  B4 02			                mov ah,2 
 0010  E8 003F R		                call charstack 
 0013  EB EC			                jmp getstrs 
				                 
 0015  80 FC 0E			    nochar:     cmp ah,0eh          ;is backspa
				ce 
 0018  74 07			                je backspace 
 001A  80 FC 1C			                cmp ah,1ch 
 001D  74 0E			                je enter            ;is enter 
 001F  EB E0			                jmp getstrs 
				                 
 0021  B4 01			    backspace:  mov ah,1 
 0023  E8 003F R		                call charstack 
 0026  B4 02			                mov ah,2 
 0028  E8 003F R		                call charstack 
 002B  EB D4			                jmp getstrs 
				 
 002D  B0 00			    enter:      mov al,0 
 002F  B4 00			                mov ah,0 
 0031  E8 003F R		                call charstack 
 0034  B4 02			                mov ah,2 
 0036  B6 04			                mov dh,4 
 0038  B2 01			                mov dl,1 
 003A  E8 003F R		                call charstack 
 003D  58			                pop ax 
 003E  C3			                ret 
				 
 003F  E9 0248 R		    charstack:  jmp  charstart 
				     
 0042  0220 022F 024A		    table       dw  offset charpush-table,offse
				t charpop-table,offset charshow-table 
 0048  0100[			    top         dw  256 dup (0) 
	   0000			
			 ]	
				
				 
 0248  53			    charstart:  push bx 
 0249  52			                push dx 
 024A  56			                push si 
Microsoft (R) Macro Assembler Version 5.00                  4/13/17 20:36:57
                                                             Page     1-2


 024B  06			                push es 
				 
 024C  80 FC 02			                cmp ah,2 
 024F  77 6F			                ja sret 
 0251  8A DC			                mov bl,ah 
 0253  B7 00			                mov bh,0 
 0255  03 DB			                add bx,bx 
 0257  B8 0042 R		                mov ax,offset table 
 025A  03 D8			                add bx,ax 
				                 
 025C  8C C8			                mov ax,cs 
 025E  8E D8			                mov ds,ax                      
				         ;set the pionter to data table 
				                 
 0260  FF 27			                jmp word ptr ds:[bx] 
				                 
 0262  2E: 8B 1E 0048 R		    charpush:   mov bx,top 
 0267  88 07			                mov ds:[bx],al 
 0269  2E: FF 06 0048 R		                inc top 
 026E  EB 50 90			                jmp sret 
				 
 0271  2E: 83 3E 0048 R 00	    charpop:    cmp top,0 
 0277  74 47			                je sret 
 0279  2E: FF 0E 0048 R		                dec top 
 027E  2E: 8B 1E 0048 R		                mov bx,top 
 0283  8A 07			                mov al,[bx] 
 0285  EB 39 90			                jmp sret 
				 
 0288  B6 04			                mov dh,4 
 028A  B2 01			                mov dl,1 
				 
 028C  BB B800			    charshow:   mov bx,0b800h 
 028F  8E C3			                mov es,bx 
 0291  B0 A0			                mov al,160 
 0293  B4 00			                mov ah,0 
 0295  F6 E6			                mul dh 
 0297  8B F8			                mov di,ax 
 0299  02 D2			                add dl,dl 
 029B  B6 00			                mov dh,0 
 029D  03 FA			                add di,dx 
				 
 029F  BB 0000			                mov bx,0 
				         
 02A2  2E: 3B 1E 0048 R		    charshows:  cmp bx,top 
 02A7  75 07			                jne noempty 
 02A9  26: C6 05 20		                mov byte ptr es:[di],' ' 
 02AD  EB 11 90			                jmp sret 
 02B0  8A 07			    noempty:    mov al,ds:[bx] 
 02B2  26: 88 05		                mov es:[di],al  
 02B5  26: C6 45 02 20		                mov byte ptr es:[di+2],' ' 
 02BA  43			                inc bx 
 02BB  83 C7 02			                add di,2 
 02BE  EB E2			                jmp charshows 
				 
Microsoft (R) Macro Assembler Version 5.00                  4/13/17 20:36:57
                                                             Page     1-3


 02C0  07			    sret:       pop es 
 02C1  5F			                pop di 
 02C2  5A			                pop dx 
 02C3  5B			                pop bx 
 02C4  C3			                ret 
				 
				 
				 
 02C5  B8 4C00			                mov ax,4c00h 
 02C8  CD 21			                int 21h 
				  
				                 
 02CA				code ends 
				end start 
Microsoft (R) Macro Assembler Version 5.00                  4/13/17 20:36:57
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	02CA	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

BACKSPACE  . . . . . . . . . . .  	L NEAR	0021	CODE

CHARPOP  . . . . . . . . . . . .  	L NEAR	0271	CODE
CHARPUSH . . . . . . . . . . . .  	L NEAR	0262	CODE
CHARSHOW . . . . . . . . . . . .  	L NEAR	028C	CODE
CHARSHOWS  . . . . . . . . . . .  	L NEAR	02A2	CODE
CHARSTACK  . . . . . . . . . . .  	L NEAR	003F	CODE
CHARSTART  . . . . . . . . . . .  	L NEAR	0248	CODE

ENTER  . . . . . . . . . . . . .  	L NEAR	002D	CODE

GETSTR . . . . . . . . . . . . .  	L NEAR	0000	CODE
GETSTRS  . . . . . . . . . . . .  	L NEAR	0001	CODE

NOCHAR . . . . . . . . . . . . .  	L NEAR	0015	CODE
NOEMPTY  . . . . . . . . . . . .  	L NEAR	02B0	CODE

SRET . . . . . . . . . . . . . .  	L NEAR	02C0	CODE
START  . . . . . . . . . . . . .  	L NEAR	0000	CODE

TABLE  . . . . . . . . . . . . .  	L WORD	0042	CODE
TOP  . . . . . . . . . . . . . .  	L WORD	0048	CODE	Length = 0100

@FILENAME  . . . . . . . . . . .  	TEXT  echostr		


    114 Source  Lines
    114 Total   Lines
     19 Symbols

  50934 + 465610 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
